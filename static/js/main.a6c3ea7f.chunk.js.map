{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlpabetHandler","setState","ALPHABET","sortByLengthHandler","LENGTH","reverseHandler","resetHandler","visibleGoods","goods","sort","good1","good2","length","reverse","console","log","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,qBAAuB,WACrB,EAAKC,SAAS,CAACH,SAAUL,EAASS,YAPtC,EAUEC,oBAAsB,WACpB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,eAAiB,WACf,EAAKJ,SAAS,CAAEJ,YAAa,EAAKD,MAAMC,cAf5C,EAkBES,aAAe,WACb,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,4CAyBE,WAAU,IAAD,OACDQ,EAvDH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNU,EAAY,YAAOC,GAgBzB,OAbIV,IAAaL,EAASS,UACxBK,EAAaE,OAGXX,IAAaL,EAASW,QACxBG,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAGvDf,GACFU,EAAaM,UAEfC,QAAQC,IAAIjB,EAAUD,GAEfU,EAkCgBS,CAAkBtB,EAAiB,CACtDI,SAAUmB,KAAKrB,MAAME,SACrBD,WAAYoB,KAAKrB,MAAMC,aAGzB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAM,EAAKpB,wBAHtB,iCAQA,wBACEmB,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAM,EAAKjB,uBAHtB,4BAQA,wBACEgB,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAM,EAAKf,kBAHtB,qBAQA,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKd,gBAHtB,sBASF,6BACE,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAtEtC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6c3ea7f.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlpabetHandler = () => {\n    this.setState({sortType: SortType.ALPHABET});\n  };\n\n  sortByLengthHandler = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseHandler = () => {\n    this.setState({ isReversed: !this.state.isReversed });\n  }\n\n  resetHandler = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n     });\n  }\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, {\n      sortType: this.state.sortType,\n      isReversed: this.state.isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={() => this.sortByAlpabetHandler()}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={() => this.sortByLengthHandler()}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={() => this.reverseHandler()}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => this.resetHandler()}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
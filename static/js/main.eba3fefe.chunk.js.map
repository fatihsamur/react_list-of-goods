{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortByAlphabetHandler","setState","ALPHABET","sortByLengthHandler","LENGTH","reverseHandler","prevState","resetHandler","visibleGoods","goods","sort","good1","good2","length","reverse","console","log","getReorderedGoods","this","className","type","classNames","button","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,sBAAwB,WACtB,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,oBAAsB,WACpB,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,eAAiB,WACf,EAAKJ,UAAS,SAAAK,GAAS,MAAK,CAC1BP,YAAaO,EAAUP,gBAhB7B,EAoBEQ,aAAe,WACb,EAAKN,SAAS,CACZF,YAAY,EACZF,SAAUJ,EAASK,QAvBzB,4CA2BE,WAAU,IAAD,OACDU,EA1DH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNS,EAAY,YAAOC,GAiBzB,OAdIZ,IAAaJ,EAASS,UACxBM,EAAaE,OAGXb,IAAaJ,EAASW,QACxBI,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAGvDd,GACFS,EAAaM,UAGfC,QAAQC,IAAInB,EAAUE,GAEfS,EAoCgBS,CAAkBvB,EAAiB,CACtDG,SAAUqB,KAAKtB,MAAMC,SACrBE,WAAYmB,KAAKtB,MAAMG,aAGzB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,WAAW,EACX,WAAYJ,KAAKtB,MAAMC,WAAaJ,EAASS,WAE/CqB,QAAS,kBAAM,EAAKvB,yBAPtB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,WAAYJ,KAAKtB,MAAMC,WAAaJ,EAASW,SAG/CmB,QAAS,kBAAM,EAAKpB,uBARtB,4BAaA,wBACEiB,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,YAAaJ,KAAKtB,MAAMG,aAG1BwB,QAAS,kBAAM,EAAKlB,kBARtB,wBAaIa,KAAKtB,MAAMG,YAAcmB,KAAKtB,MAAMC,WAAaJ,EAASK,OAE5D,wBACEsB,KAAK,SACLD,UAAU,4BACVI,QAAS,kBAAM,EAAKhB,gBAHtB,sBAUJ,6BACE,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAzFtC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eba3fefe.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n  /* eslint-disable-next-line */\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortByAlphabetHandler = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLengthHandler = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseHandler = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  resetHandler = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, {\n      sortType: this.state.sortType,\n      isReversed: this.state.isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames({\n              button: true,\n              'is-info': true,\n              'is-light': this.state.sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => this.sortByAlphabetHandler()}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              button: true,\n              'is-success': true,\n              'is-light': this.state.sortType !== SortType.LENGTH,\n\n            })}\n            onClick={() => this.sortByLengthHandler()}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              button: true,\n              'is-warning': true,\n              'is-light': !this.state.isReversed,\n\n            })}\n            onClick={() => this.reverseHandler()}\n          >\n            Reverse\n          </button>\n\n          {!(!this.state.isReversed && this.state.sortType === SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.resetHandler()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}